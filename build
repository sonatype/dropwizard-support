#!/usr/bin/env bash

set -o errexit
set -o nounset

# compatibility check
# shellcheck disable=SC2128
if [ "$BASH_VERSINFO" -lt 4 ]; then
  # shellcheck disable=SC2128
  echo "ERROR: Incompatible Bash detected: $BASH $BASH_VERSINFO $BASH_VERSION"
  exit 2
fi

declare -g basename=$(basename "$0")
declare -g basedir=$(cd "$(dirname "$0")" && pwd)
declare -g command_default=""

# show message and exit
function die {
  echo "$1"
  exit 1
}

# show usage and exit
function usage {
  set +o nounset
  local syntax="$1"
  set -o nounset

  if [[ -z "$syntax" ]]; then
    echo "usage: $basename <command> [options]"
  else
    echo "usage: $basename $syntax"
  fi
  exit 2
}

# run self
function self {
  $0 "$@"
}

function main {
  build_config="$basedir/build-config.bash"
  # shellcheck source=build-config.bash
  source "$build_config"

  build_local_config="$basedir/build-local.bash"
  if [[ -f "$build_local_config" ]]; then
    # shellcheck source=build-local.bash
    source "$build_local_config"
  fi

  set +o nounset
  command="$1"
  set -o nounset

  set +o errexit
  shift
  set -o errexit

  if [[ -z "$command" ]]; then
    if [[ -n "$command_default" ]]; then
      self "$command_default"
    else
      # complain if no command is given
      usage
    fi
  fi

  # attempt to lookup command function
  local fn="command_$command"
  if [[ "$(type -t $fn)" = 'function' ]]; then
    $fn "$@"
  else
    # complain about missing command function
    echo "Unknown command: $command"
    usage
  fi
}

main "$@"
